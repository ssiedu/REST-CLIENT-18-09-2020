
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SSI
 */
public class CourseEntry extends java.awt.Frame {

    /**
     * Creates new form CourseEntry
     */
    public CourseEntry() {
        initComponents();
        setSize(500,500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        textField1 = new java.awt.TextField();
        textField2 = new java.awt.TextField();
        textField3 = new java.awt.TextField();
        textField4 = new java.awt.TextField();
        textField5 = new java.awt.TextField();
        button1 = new java.awt.Button();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(null);

        label1.setText("Fees");
        add(label1);
        label1.setBounds(120, 230, 32, 20);

        label2.setText("Code");
        add(label2);
        label2.setBounds(120, 70, 34, 20);

        label3.setText("Title");
        add(label3);
        label3.setBounds(120, 110, 27, 20);

        label4.setText("Subject");
        add(label4);
        label4.setBounds(120, 150, 50, 20);

        label5.setText("Dur");
        add(label5);
        label5.setBounds(120, 190, 24, 20);
        add(textField1);
        textField1.setBounds(230, 70, 140, 20);
        add(textField2);
        textField2.setBounds(230, 110, 140, 20);
        add(textField3);
        textField3.setBounds(230, 150, 140, 20);
        add(textField4);
        textField4.setBounds(230, 190, 140, 20);
        add(textField5);
        textField5.setBounds(230, 230, 140, 20);

        button1.setLabel("Save");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        add(button1);
        button1.setBounds(210, 300, 43, 24);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
       
        //reading user inputs
        int code=Integer.parseInt(textField1.getText());
        String title=textField2.getText();
        String subject=textField3.getText();
        int duration=Integer.parseInt(textField4.getText());
        int fees=Integer.parseInt(textField5.getText());
        //create a json-string (because service is consuming data in json format)
        JSONObject json=new JSONObject();
        json.put("code", code);
        json.put("title", title);
        json.put("subject",subject);
        json.put("duration",duration);
        json.put("fees",fees);
        String jsonStr=json.toString();
        System.out.println(jsonStr);
         // calling a REST-API (POST)
        String endPoint="http://localhost:8080/REST-Example/course";
        try{
            URL url=new URL(endPoint);
            HttpURLConnection con=(HttpURLConnection)url.openConnection();
            con.setDoInput(true);
            con.setDoOutput(true);
            //con.setRequestMethod("PUT");
            con.setRequestMethod("POST");
            con.setRequestProperty("Content-Type", "application/json");
            con.setRequestProperty("Accept", "application/json");
            //we will send the data using OutputStream
            OutputStream os=con.getOutputStream();
            os.write(jsonStr.getBytes());
            os.flush();
            os.close();
            //we will receive the response using InputStream
            InputStream is=con.getInputStream();
            String res="";
            BufferedReader br=new BufferedReader(new InputStreamReader(is));
            while(true){
                String line=br.readLine();
                if(line==null)break;
                res=res+line;
            }
            System.out.println(res);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_button1ActionPerformed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseEntry().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private java.awt.TextField textField3;
    private java.awt.TextField textField4;
    private java.awt.TextField textField5;
    // End of variables declaration//GEN-END:variables
}
